name: Build and Deploy App in Development

env:
  AZURE_PROVISIONING_GATEWAY_PATH: './Webapp'
  AZURE_API_SERVER_PATH: './APIServer'
  AZURE_FUNCTION_PATH: './Function'
  DOTNET_VERSION: '8.0.x'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build Provisioning Gateway
        run: dotnet build ./Sources/Software/"Provisioning Gateway.sln"

      - name: Test Provisioning Gateway
        run: dotnet test --no-build --verbosity normal ./Sources/Software/"Provisioning Gateway.sln"

      - name: Public Provisioning Gateway
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/SeniorConnect/${{env.AZURE_PROVISIONING_GATEWAY_PATH}}  ./Sources/Software/"Provisioning Gateway.sln"

      - name: Build API Server
        run: dotnet build ./Sources/Software/"API Server.sln"

      - name: Test API Server
        run: dotnet test --no-build --verbosity normal ./Sources/Software/"API Server.sln"

      - name: Public API Server
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/SeniorConnect/${{env.AZURE_API_SERVER_PATH}}  ./Sources/Software/"API Server.sln"
      
      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          dotnet build ./Sources/Software/Functions.sln --configuration Release --output ./${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output
          popd
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/SeniorConnect

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy Provisioning Gateway Development
        id: deploy-provisioning-gateway
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_PROVISIONING_GATEWAY_NAME_DEV }}
          publish-profile: ${{ secrets.AZURE_PROVISIONING_GATEWAY_DEV_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_PROVISIONING_GATEWAY_PATH }}

      - name: Deploy API Server Development
        id: deploy-api-server
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_API_SERVER_NAME_DEV }}
          publish-profile: ${{ secrets.AZURE_API_DEV_SERVER_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_API_SERVER_PATH }}

      - name: Deploy Azure Functions
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ secrets.AZURE_FUNCTION_DEV_NAME }}
          package: '${{ env.AZURE_FUNCTION_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTION_DEV_PUBLISH_PROFILE }}
